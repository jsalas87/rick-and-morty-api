// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model EstatusType {
  id          Int       @id @default(autoincrement())
  description String
  estatus     Estatus[]
}

model Estatus {
  id            Int         @id @default(autoincrement())
  description   String
  estatusType   EstatusType @relation(fields: [estatusTypeId], references: [id])
  estatusTypeId Int
  characters    Character[]
  episodes      Episode[]
}

model Category {
  id            Int           @id @default(autoincrement())
  description   String
  subCategories SubCategory[]
}

model SubCategory {
  id          Int         @id @default(autoincrement())
  description String
  category    Category    @relation(fields: [categoryId], references: [id])
  categoryId  Int
  characters  Character[]
  episodes    Episode[]
}

model Character {
  id                      Int                      @id @default(autoincrement())
  name                    String
  estatus                 Estatus                  @relation(fields: [estatusId], references: [id])
  estatusId               Int
  subCategory             SubCategory              @relation(fields: [subCategoryId], references: [id])
  subCategoryId           Int
  type                    String
  gender                  String
  image                   String
  url                     String
  created                 DateTime                 @default(now())
  characterParticipations CharacterParticipation[]
}

model Episode {
  id                      Int                      @id @default(autoincrement())
  name                    String
  airDate                 String
  episode                 String
  url                     String
  created                 DateTime                 @default(now())
  duration                Int
  estatus                 Estatus                  @relation(fields: [estatusId], references: [id])
  estatusId               Int
  subCategory             SubCategory              @relation(fields: [subCategoryId], references: [id])
  subCategoryId           Int
  characterParticipations CharacterParticipation[]
}

model CharacterParticipation {
  id                   Int                   @id @default(autoincrement())
  episode              Episode               @relation(fields: [episodeId], references: [id])
  episodeId            Int
  character            Character             @relation(fields: [characterId], references: [id])
  characterId          Int
  characterApparitions CharacterApparition[]
}

model CharacterApparition {
  id                       Int                    @id @default(autoincrement())
  characterParticipation   CharacterParticipation @relation(fields: [characterparticipationId], references: [id])
  characterparticipationId Int
  init                     Int
  finish                   Int
}
